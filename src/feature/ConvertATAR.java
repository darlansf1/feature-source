/*
 * ConvertATAR.java
 *
 * Created on 16 de Dezembro de 2009, 14:10
 */

package feature;

import java.io.BufferedReader;
import java.io.File;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import processos.SupAutomatico;

/**
 *
 * @author  Rafael
 */
public class ConvertATAR extends javax.swing.JFrame {

    /** Creates new form ConvertATAR */
    public ConvertATAR() {
        initComponents();
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tSupMin = new javax.swing.JTextField();
        cSupAut = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        tAlfa = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tDirIn = new javax.swing.JTextField();
        tDirOut = new javax.swing.JTextField();
        bProcIn = new javax.swing.JButton();
        bProcOut = new javax.swing.JButton();
        bConverter = new javax.swing.JButton();
        bSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Generate Association Rules from Transaction Files");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        jLabel3.setText("Minumum Support");

        tSupMin.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tSupMin.setText("0");

        cSupAut.setText("Automatic Support");
        cSupAut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSupAutActionPerformed(evt);
            }
        });

        jLabel5.setText("Alfa");

        tAlfa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tAlfa.setText("1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tSupMin, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(159, 159, 159)
                .addComponent(cSupAut)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(4, 4, 4)
                .addComponent(tAlfa, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tSupMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cSupAut)
                    .addComponent(tAlfa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Directories"));

        jLabel1.setText("Input");

        jLabel2.setText("Output");

        bProcIn.setText("Select ...");
        bProcIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bProcInActionPerformed(evt);
            }
        });

        bProcOut.setText("Select ...");
        bProcOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bProcOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tDirOut)
                    .addComponent(tDirIn, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bProcIn)
                    .addComponent(bProcOut))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tDirIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bProcIn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tDirOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bProcOut))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bConverter.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        bConverter.setText("Convert");
        bConverter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConverterActionPerformed(evt);
            }
        });

        bSair.setText("Close");
        bSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bConverter, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bSair, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSair)
                    .addComponent(bConverter))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void bProcInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bProcInActionPerformed
JFileChooser open = new JFileChooser();
    open.setFileSelectionMode(open.DIRECTORIES_ONLY);
    open.setDialogTitle("Selecione o Diretório");
    open.setDialogType(open.OPEN_DIALOG);
    open.showOpenDialog(null);
    if(open.getSelectedFile()==null){
        tDirIn.setText("");
    }else{
        tDirIn.setText(open.getSelectedFile().toString());
    }
}//GEN-LAST:event_bProcInActionPerformed

private void bProcOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bProcOutActionPerformed
    JFileChooser open = new JFileChooser();
    open.setFileSelectionMode(open.DIRECTORIES_ONLY);
    open.setDialogTitle("Selecione o Diretório");
    open.setDialogType(open.OPEN_DIALOG);
    open.showOpenDialog(null);
    if(open.getSelectedFile()==null){
        tDirOut.setText("");
    }else{
        tDirOut.setText(open.getSelectedFile().toString());
    }
}//GEN-LAST:event_bProcOutActionPerformed

private boolean ValidarDir(){
    File dirIn = new File(tDirIn.getText());
    if(!dirIn.isDirectory()){
        JOptionPane.showMessageDialog(null, "O diretório de entrada não é válido", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if(!dirIn.exists()){
        JOptionPane.showMessageDialog(null, "O diretório de entrada não existe", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    File dirOut = new File(tDirOut.getText());
    if(!dirOut.isDirectory()){
        JOptionPane.showMessageDialog(null, "O diretório de saída não é valido", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if(!dirOut.exists()){
        JOptionPane.showMessageDialog(null, "O diretório de saída não existe", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    File[] files = dirIn.listFiles();
    if(files.length==0){
        JOptionPane.showMessageDialog(null, "O diretório de entrada não possui arquivos", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    if(dirIn.toString().equals(dirOut.toString())){
        JOptionPane.showMessageDialog(null, "O diretório de entrada não pode ser igual ao diretório de saída", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    return true;
}

private void bConverterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConverterActionPerformed
    boolean valida = ValidarDir();
    if(valida == false){
        return;
    }
    File dirIn = new File(tDirIn.getText());
    File dirOut = new File(tDirOut.getText());
    ArrayList<File> filesIn = new ArrayList<File>();
    ArrayList<File> filesOut = new ArrayList<File>();
    boolean criarDir = GerenciadorArquivos.ListaArquivos(dirIn, dirOut, filesIn, filesOut, dirIn);
    if(criarDir == false){
        JOptionPane.showMessageDialog(null, "Não foi possível criar os diretórios necessários para a extração dos arquivos.", "Erro", JOptionPane.ERROR_MESSAGE);
    }
    

    for(int i=0;i<filesIn.size();i++){
        File fileIn = filesIn.get(i);
        File fileOut = filesOut.get(i);
        System.out.println("File In:  " + fileIn.toString());
        System.out.println("File Out: " + fileOut.toString());
        
        double sup = 0.0;
        
        if(cSupAut.isSelected()){
            
            sup = SupAutomatico.obterSupAutSent(fileIn);
            //sup = SupAutomatico.obterSutAutPar(fileIn);
            
            if(sup == 0.0){
                return;
                //continue;
            }else{
                Double alfa = Double.parseDouble(tAlfa.getText());
                sup = sup*alfa;
                System.out.println("Suporte: " + sup);
            }        
        }else{
            sup = Double.parseDouble(tSupMin.getText());
        }
        
        int pos = 0;
        String[] comando;
        if(System.getProperties().get("os.name").toString().contains("Windows")){
            comando = new String[6];
            comando[pos] = "aprioriwin"; pos ++;
        }else{
            comando = new String[7];
            comando[pos] = "wine"; pos++;
            comando[pos] = "aprioriwin"; pos ++;
        }
        
        comando[pos] = "-s" + sup; pos++;
        comando[pos] = "-c" + "0"; pos++;
        comando[pos] = "-o"; pos++;
        comando[pos] = fileIn.toString(); pos++;
        comando[pos] = fileOut.toString(); pos++;
        
        
        try{
            Process process = new ProcessBuilder(comando).start();
            InputStream is = process.getInputStream();
            InputStreamReader isr = new InputStreamReader(is);
            BufferedReader br = new BufferedReader(isr);
            String line = "";
            
            while ((line = br.readLine())!=null) { }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ocorreu um erro ao gerar o arquivo de regras. O aplicativo será finalizado.", "Erro", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
            System.exit(0);
        }
        
    }
    JOptionPane.showMessageDialog(null, "Operação concluída com sucesso", "OK", JOptionPane.PLAIN_MESSAGE);
}//GEN-LAST:event_bConverterActionPerformed

private void bSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSairActionPerformed
this.dispose();
}//GEN-LAST:event_bSairActionPerformed

private void cSupAutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSupAutActionPerformed
    if(cSupAut.isSelected()){
        tSupMin.setEnabled(false);
    }else{
        tSupMin.setEnabled(true);
    }
}//GEN-LAST:event_cSupAutActionPerformed

    /**
    * @param args the command line arguments
    */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bConverter;
    private javax.swing.JButton bProcIn;
    private javax.swing.JButton bProcOut;
    private javax.swing.JButton bSair;
    private javax.swing.JCheckBox cSupAut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField tAlfa;
    private javax.swing.JTextField tDirIn;
    private javax.swing.JTextField tDirOut;
    private javax.swing.JTextField tSupMin;
    // End of variables declaration//GEN-END:variables

}
