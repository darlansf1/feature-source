/*
 * SepararTT.java
 *
 * Created on August 16, 2010, 10:52 AM
 */

package feature;

import java.io.File;
import java.io.FileWriter;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author  ragero
 */
public class SepararArquivosTT extends javax.swing.JFrame {
    
    /** Creates new form SepararTT */
    public SepararArquivosTT() {
        initComponents();
        this.setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tDirIn = new javax.swing.JTextField();
        tDirOut = new javax.swing.JTextField();
        bProcIn = new javax.swing.JButton();
        bProcOut = new javax.swing.JButton();
        bSep = new javax.swing.JButton();
        bSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Separar Arquivos de Treino e Teste");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Diretórios"));

        jLabel1.setText("Entrada:");

        jLabel2.setText("Saida:");

        bProcIn.setText("Procurar...");
        bProcIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bProcInActionPerformed(evt);
            }
        });

        bProcOut.setText("Procurar...");
        bProcOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bProcOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tDirOut)
                    .addComponent(tDirIn, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bProcIn)
                    .addComponent(bProcOut))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bProcIn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bProcOut))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(tDirIn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tDirOut, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        bSep.setFont(new java.awt.Font("Tahoma", 1, 11));
        bSep.setText("Separar");
        bSep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSepActionPerformed(evt);
            }
        });

        bSair.setText("Sair");
        bSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bSep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bSair, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSair)
                    .addComponent(bSep))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bProcInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bProcInActionPerformed
        JFileChooser open = new JFileChooser();
        open.setFileSelectionMode(open.DIRECTORIES_ONLY);
        open.setDialogTitle("Selecione o Diretório");
        open.setDialogType(open.OPEN_DIALOG);
        open.showOpenDialog(null);
        if(open.getSelectedFile()==null){
            tDirIn.setText("");
        }else{
            tDirIn.setText(open.getSelectedFile().toString());
        }
    }//GEN-LAST:event_bProcInActionPerformed

    private void bProcOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bProcOutActionPerformed
        JFileChooser open = new JFileChooser();
        open.setFileSelectionMode(open.DIRECTORIES_ONLY);
        open.setDialogTitle("Selecione o Diretório");
        open.setDialogType(open.OPEN_DIALOG);
        open.showOpenDialog(null);
        if(open.getSelectedFile()==null){
            tDirOut.setText("");
        }else{
            tDirOut.setText(open.getSelectedFile().toString());
        }
    }//GEN-LAST:event_bProcOutActionPerformed

 private boolean ValidarDir(){
    File dirIn = new File(tDirIn.getText());
    if(!dirIn.isDirectory()){
        JOptionPane.showMessageDialog(null, "O diretório de entrada não é válido", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if(!dirIn.exists()){
        JOptionPane.showMessageDialog(null, "O diretório de entrada não existe", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    File dirOut = new File(tDirOut.getText());
    if(!dirOut.isDirectory()){
        JOptionPane.showMessageDialog(null, "O diretório de saída não é valido", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if(!dirOut.exists()){
        JOptionPane.showMessageDialog(null, "O diretório de saída não existe", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    File[] files = dirIn.listFiles();
    if(files.length==0){
        JOptionPane.showMessageDialog(null, "O diretório de entrada não possui arquivos", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    if(dirIn.toString().equals(dirOut.toString())){
        JOptionPane.showMessageDialog(null, "O diretório de entrada não pode ser igual ao diretório de saída", "Erro", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    return true;
}
    
 private void bSepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSepActionPerformed
        boolean valida = ValidarDir();
    if(valida == false){
        return;
    }
    File dirIn = new File(tDirIn.getText());
    File dirOut = new File(tDirOut.getText());
    ArrayList<File> filesIn = new ArrayList<File>();
    ArrayList<File> filesOut = new ArrayList<File>();
    File dirNameOut = new File(dirOut + "/TEST/");
    boolean criarDir;
    criarDir = dirNameOut.mkdir();
    if(criarDir = false){
        JOptionPane.showMessageDialog(null, "Não foi possível criar o diretório de teste\nA operação será finalizada.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }
    dirNameOut = new File(dirOut + "/TRAIN/");
    dirNameOut.mkdir();
    if(criarDir = false){
        JOptionPane.showMessageDialog(null, "Não foi possível criar o diretório de treino\nA operação será finalizada.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    criarDir = GerenciadorArquivos.CriarDirsTT(dirIn, dirOut, filesIn, filesOut, dirIn);
    
    File dirOut2 = new File(tDirOut.getText() + "/TRAIN/");
    criarDir = GerenciadorArquivos.ListaArquivosTreino(dirIn, dirOut2, filesIn, filesOut, dirIn);
    if(criarDir == false){
        JOptionPane.showMessageDialog(null, "Não foi possível criar os diretórios necessários para a extração dos arquivos.", "Erro", JOptionPane.ERROR_MESSAGE);
    
    }    
    dirOut2 = new File(tDirOut.getText() + "/TEST/");
    criarDir = GerenciadorArquivos.ListaArquivosTeste(dirIn, dirOut2, filesIn, filesOut, dirIn);
    if(criarDir == false){
        JOptionPane.showMessageDialog(null, "Não foi possível criar os diretórios necessários para a extração dos arquivos.", "Erro", JOptionPane.ERROR_MESSAGE);
    }
    
    for(int i=0;i<filesIn.size();i++){
        File fileIn = filesIn.get(i);
        File fileOut = filesOut.get(i);
        System.out.println("File In:  " + fileIn.toString());
        System.out.println("File Out: " + fileOut.toString());
        
        //Copiando arquivos
        try{
            StringBuffer buffer = new StringBuffer("");
            String linha = new String("");
            RandomAccessFile arqIn = new RandomAccessFile(fileIn, "r");
            FileWriter arqOut = new FileWriter(fileOut);
            
            while((linha=arqIn.readLine())!=null){
                buffer.append(linha + "\n");
            }
            arqOut.write(buffer.toString());
            arqOut.close();
            arqIn.close();
        }catch(Exception e){
            System.out.println("Não foi possível copiar o arquivo.");
            e.printStackTrace();
        }
        
    }
    JOptionPane.showMessageDialog(null, "Operação concluída com sucesso", "OK", JOptionPane.PLAIN_MESSAGE);
}//GEN-LAST:event_bSepActionPerformed

    private void bSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_bSairActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SepararArquivosTT().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bProcIn;
    private javax.swing.JButton bProcOut;
    private javax.swing.JButton bSair;
    private javax.swing.JButton bSep;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField tDirIn;
    private javax.swing.JTextField tDirOut;
    // End of variables declaration//GEN-END:variables
    
}
