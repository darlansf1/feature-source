/*
 * Classificadores.java
 *
 * Created on March 11, 2010, 10:56 AM
 */

package extra;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author  ragero
 */
public class Classificadores extends javax.swing.JFrame {
    
    /** Creates new form Classificadores */
    public Classificadores() {
        initComponents();
        this.setVisible(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tDirIn = new javax.swing.JTextField();
        tDirOut = new javax.swing.JTextField();
        bProcIn = new javax.swing.JButton();
        bProcOut = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        oNaive = new javax.swing.JRadioButton();
        oJ48 = new javax.swing.JRadioButton();
        oSmo = new javax.swing.JRadioButton();
        oKnn = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tAloc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tViz = new javax.swing.JTextField();
        bExec = new javax.swing.JButton();
        bSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Diretórios"));

        jLabel1.setText("Entrada:");

        jLabel2.setText("Saida:");

        bProcIn.setText("Procurar...");
        bProcIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bProcInActionPerformed(evt);
            }
        });

        bProcOut.setText("Procurar...");
        bProcOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bProcOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tDirOut)
                    .addComponent(tDirIn, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bProcIn)
                    .addComponent(bProcOut))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bProcIn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bProcOut))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(tDirIn, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tDirOut, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Indutores"));

        buttonGroup1.add(oNaive);
        oNaive.setSelected(true);
        oNaive.setText("Naïve Bayes");

        buttonGroup1.add(oJ48);
        oJ48.setText("J48");

        buttonGroup1.add(oSmo);
        oSmo.setText("SMO");

        buttonGroup1.add(oKnn);
        oKnn.setText("Knn");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addComponent(oNaive)
                .addGap(44, 44, 44)
                .addComponent(oJ48)
                .addGap(68, 68, 68)
                .addComponent(oSmo)
                .addGap(63, 63, 63)
                .addComponent(oKnn)
                .addGap(108, 108, 108))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oKnn)
                    .addComponent(oJ48)
                    .addComponent(oSmo)
                    .addComponent(oNaive))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Opções"));

        jLabel3.setText("Alocação de Memória:");

        tAloc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tAloc.setText("2600");

        jLabel4.setText("MB");

        jLabel6.setText("Número de Vizinhos Mais Próximos:");

        tViz.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tViz.setText("7");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tAloc, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(28, 28, 28)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tViz, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(tViz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)
                        .addComponent(tAloc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bExec.setFont(new java.awt.Font("Tahoma", 1, 11));
        bExec.setText("Executar");
        bExec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExecActionPerformed(evt);
            }
        });

        bSair.setText("Sair");
        bSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bExec)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bSair, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSair)
                    .addComponent(bExec))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bProcInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bProcInActionPerformed
        JFileChooser open = new JFileChooser();
        open.setFileSelectionMode(open.DIRECTORIES_ONLY);
        open.setDialogTitle("Selecione o Diretório");
        open.setDialogType(open.OPEN_DIALOG);
        open.showOpenDialog(null);
        if(open.getSelectedFile()==null){
            tDirIn.setText("");
        }else{
            tDirIn.setText(open.getSelectedFile().toString());
        }
    }//GEN-LAST:event_bProcInActionPerformed

    private void bProcOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bProcOutActionPerformed
        JFileChooser open = new JFileChooser();
        open.setFileSelectionMode(open.DIRECTORIES_ONLY);
        open.setDialogTitle("Selecione o Diretório");
        open.setDialogType(open.OPEN_DIALOG);
        open.showOpenDialog(null);
        if(open.getSelectedFile()==null){
            tDirOut.setText("");
        }else{
            tDirOut.setText(open.getSelectedFile().toString());
        }
    }//GEN-LAST:event_bProcOutActionPerformed

    
    private boolean ValidarDir(){
        File dirIn = new File(tDirIn.getText());
        if(!dirIn.isDirectory()){
            JOptionPane.showMessageDialog(null, "O diretório de entrada não é válido", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(!dirIn.exists()){
            JOptionPane.showMessageDialog(null, "O diretório de entrada não existe", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        File dirOut = new File(tDirOut.getText());
        if(!dirOut.isDirectory()){
            JOptionPane.showMessageDialog(null, "O diretório de saída não é valido", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if(!dirOut.exists()){
            JOptionPane.showMessageDialog(null, "O diretório de saída não existe", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        File[] files = dirIn.listFiles();
        if(files.length==0){
            JOptionPane.showMessageDialog(null, "O diretório de entrada não possui arquivos", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if(dirIn.toString().equals(dirOut.toString())){
            JOptionPane.showMessageDialog(null, "O diretório de entrada não pode ser igual ao diretório de saída", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }
    
    
    private void bExecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExecActionPerformed
        boolean valida = ValidarDir();
    if(valida == false){
        return;
    }
    File dirIn = new File(tDirIn.getText());
    File dirOut = new File(tDirOut.getText());
    File[] filesIn = dirIn.listFiles();
    String fileOut = "";
    
    Arrays.sort(filesIn);
    
    StringBuffer rec = new StringBuffer("");
    
    for(int i=0;i<filesIn.length;i++){
        String file = filesIn[i].toString();
        System.out.println(file);
        if(file.endsWith(".arff")){
            rec.append(file + "--------------------------------------------\n");
            if(oKnn.isSelected()){
                fileOut = "knn.txt";
                try {
                    Integer fold = 10;
                    
                    String[] comando = new String[6];
                    comando[0] = "java";
                    comando[1] = "-jar";
                    comando[2] = "/exp/ragero/Knn_Cosseno/CossenoWeka.jar";
                    comando[3] = file;
                    comando[4] = fold.toString();
                    comando[5] = tViz.getText();
                    
                    
                    String cmd = "";
                    for(int j=0;j<comando.length;j++){
                        cmd = cmd + comando[j] + " ";
                    }
                    
                    boolean nunca = true;
                    while(nunca == true){
                        System.out.println("Cmd: " + cmd);
                        Process process = Runtime.getRuntime().exec(comando);
                        //Process process = new ProcessBuilder(comando).start();
                        process.waitFor();
                        InputStream is = process.getInputStream();
                        InputStreamReader isr = new InputStreamReader(is);
                        BufferedReader br = new BufferedReader(isr);
                        String line = "";
                        while ((line = br.readLine())!=null) { 
                            rec.append(line + "\n");
                            System.out.println(line);
                            nunca = false;
                        }
                        process.destroy();
                    }


                } catch (Exception e) {
                    e.printStackTrace();
                    System.out.println(e.getMessage());
                    JOptionPane.showMessageDialog(this,"Problemas na execução da classificação!", "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }else{
                String[] comando = new String[9];
                comando[0] = "java";
                comando[1] = "-Xmx" + tAloc.getText() + "M";
                comando[2] = "-cp";
                comando[3] = "/usr/share/java/weka.jar";

                if(oNaive.isSelected()){
                    comando[4] = "weka.classifiers.bayes.NaiveBayes";
                    fileOut = "naive.txt";
                }else{
                    if(oJ48.isSelected()){
                        comando[4] = "weka.classifiers.trees.J48";
                        fileOut = "j48.txt";
                    }else{
                        if(oSmo.isSelected()){
                            comando[4] = "weka.classifiers.functions.SMO";
                            fileOut = "smo.txt";
                        }
                    }
                }
                comando[5] = "-t";
                comando[6] = file;
                comando[7] = "-o";
                comando[8] = "-i";

                String cmd = "";
                for(int j=0;j<comando.length;j++){
                    cmd = cmd + comando[j] + " ";
                }
                cmd = cmd.trim();
                try {

                    boolean nunca = true;
                    while(nunca == true){
                        System.out.println("Cmd: " + cmd);
                        Process process = Runtime.getRuntime().exec(comando);
                        //Process process = new ProcessBuilder(comando).start();
                        process.waitFor();
                        InputStream is = process.getInputStream();
                        InputStreamReader isr = new InputStreamReader(is);
                        BufferedReader br = new BufferedReader(isr);
                        String line = "";
                        System.out.println(line);
                        boolean grava = false;
                        while ((line = br.readLine())!=null) { 
                            if(line.contains("Time taken to build model:")){
                                rec.append(line + "\n");
                            }
                            if(line.contains("Stratified cross-validation")){
                                grava = true;
                            }
                            if(grava == true){
                                rec.append(line + "\n");
                                nunca = false;
                            }

                        }
                        process.destroy();
                    }


                } catch (Exception e) {
                    e.printStackTrace();
                    System.out.println(e.getMessage());
                    JOptionPane.showMessageDialog(this,"Problemas na execução da classificação!", "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }

            }    
        
        }
            
            
        rec.append("\n\n");
        
    }
    
    System.out.println("\n\n\n");
    
    try{
        fileOut = dirOut.toString() + "/" + fileOut;
        FileWriter arq = new FileWriter(fileOut);
        arq.write(rec.toString());
        arq.close();
    }catch(Exception e){
        JOptionPane.showMessageDialog(null, "Ocorreu um erro ao gravar o arquivo de resultados.\nA operação será finalizada.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    JOptionPane.showMessageDialog(null, "Operação concluída com sucesso", "OK", JOptionPane.PLAIN_MESSAGE);
        
        //MontaArffDiscover();
}//GEN-LAST:event_bExecActionPerformed

    private void bSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_bSairActionPerformed
    
    /**
     * @param args the command line arguments
     */

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bExec;
    private javax.swing.JButton bProcIn;
    private javax.swing.JButton bProcOut;
    private javax.swing.JButton bSair;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton oJ48;
    private javax.swing.JRadioButton oKnn;
    private javax.swing.JRadioButton oNaive;
    private javax.swing.JRadioButton oSmo;
    private javax.swing.JTextField tAloc;
    private javax.swing.JTextField tDirIn;
    private javax.swing.JTextField tDirOut;
    private javax.swing.JTextField tViz;
    // End of variables declaration//GEN-END:variables
    
}
